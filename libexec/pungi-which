#!/usr/bin/env bash
#
# Summary: Display the full path to an executable
#
# Usage: pungi which <command> [--nosystem]
#
# Displays the full path to the executable that pungi will invoke when
# you run the given command.
# Use --nosystem argument in case when you don't need to search command in the 
# system environment.
#

set -e
[ -n "$PUNGI_DEBUG" ] && set -x

# Provide pungi completions
if [ "$1" = "--complete" ]; then
  exec pungi-shims --short
fi

if [ "$2" = "--nosystem" ]; then
  system=""
else
  system="system"
fi

remove_from_path() {
  local path_to_remove="$1"
  local path_before
  local result=":${PATH//\~/$HOME}:"
  while [ "$path_before" != "$result" ]; do
    path_before="$result"
    result="${result//:$path_to_remove:/:}"
  done
  result="${result%:}"
  echo "${result#:}"
}

PUNGI_COMMAND="$1"

if [ -z "$PUNGI_COMMAND" ]; then
  pungi-help --usage which >&2
  exit 1
fi

OLDIFS="$IFS"
IFS=: versions=(${PUNGI_VERSION:-$(pungi-version-name)})
IFS="$OLDIFS"

for version in "${versions[@]}" "$system"; do
  if [ "$version" = "system" ]; then
    PATH="$(remove_from_path "${PUNGI_ROOT}/shims")"
    PUNGI_COMMAND_PATH="$(command -v "$PUNGI_COMMAND" || true)"
  else
    PUNGI_COMMAND_PATH="${PUNGI_ROOT}/versions/${version}/bin/${PUNGI_COMMAND}"
  fi
  if [ -x "$PUNGI_COMMAND_PATH" ]; then
    break
  fi
done

OLDIFS="$IFS"
IFS=$'\n' scripts=(`pungi-hooks which`)
IFS="$OLDIFS"
for script in "${scripts[@]}"; do
  source "$script"
done

if [ -x "$PUNGI_COMMAND_PATH" ]; then
  echo "$PUNGI_COMMAND_PATH"
else
  any_not_installed=0
  for version in "${versions[@]}"; do
    if [ "$version" = "system" ]; then
      continue
    fi
    if ! [ -d "${PUNGI_ROOT}/versions/${version}" ]; then
      echo "pungi: version \`$version' is not installed (set by $(pungi-version-origin))" >&2
      any_not_installed=1
    fi
  done
  if [ "$any_not_installed" = 1 ]; then
    exit 1
  fi

  echo "pungi: $PUNGI_COMMAND: command not found" >&2

  versions="$(pungi-whence "$PUNGI_COMMAND" || true)"
  if [ -n "$versions" ]; then
    { echo
      echo "The \`$1' command exists in these Python versions:"
      echo "$versions" | sed 's/^/  /g'
      echo
      echo "Note: See 'pungi help global' for tips on allowing both"
      echo "      python2 and python3 to be found."
    } >&2
  fi

  exit 127
fi
