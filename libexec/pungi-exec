#!/usr/bin/env bash
#
# Summary: Run an executable with the selected Python version
#
# Usage: pungi exec <command> [arg1 arg2...]
#
# Runs an executable by first preparing PATH so that the selected Python
# version's `bin' directory is at the front.
#
# For example, if the currently selected Python version is 2.7.6:
#   pungi exec pip install -rrequirements.txt
#
# is equivalent to:
#   PATH="$PUNGI_ROOT/versions/2.7.6/bin:$PATH" pip install -rrequirements.txt

set -e
[ -n "$PUNGI_DEBUG" ] && set -x

# Provide pungi completions
if [ "$1" = "--complete" ]; then
  exec pungi-shims --short
fi

PUNGI_VERSION="$(pungi-version-name)"
PUNGI_COMMAND="$1"

if [ -z "$PUNGI_COMMAND" ]; then
  pungi-help --usage exec >&2
  exit 1
fi

export PUNGI_VERSION
PUNGI_COMMAND_PATH="$(pungi-which "$PUNGI_COMMAND")"
PUNGI_BIN_PATH="${PUNGI_COMMAND_PATH%/*}"

OLDIFS="$IFS"
IFS=$'\n' scripts=(`pungi-hooks exec`)
IFS="$OLDIFS"
for script in "${scripts[@]}"; do
  source "$script"
done

shift 1
if [ "${PUNGI_BIN_PATH#${PUNGI_ROOT}}" != "${PUNGI_BIN_PATH}" ]; then
  # Only add to $PATH for non-system version.
  export PATH="${PUNGI_BIN_PATH}:${PATH}"
fi
exec "$PUNGI_COMMAND_PATH" "$@"
